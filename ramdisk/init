#!/bin/sh

[ -d /dev ] || mkdir -m 0755 /dev
mount -t devtmpfs -o mode=0755 udev /dev

[ -e /dev/null ] || mknod /dev/null c 1 3

mkdir /dev/pts
mount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || true

[ -d /sys ] || mkdir /sys
mount -t sysfs -o nodev,noexec,nosuid sysfs /sys

[ -d /proc ] || mkdir /proc
mount -t proc -o nodev,noexec,nosuid proc /proc

[ -d /tmp ] || mkdir /tmp
[ -d /root ] || mkdir -m 0700 /root

insmod /lib/console/font.ko
insmod /lib/console/softcursor.ko
insmod /lib/console/bitblit.ko
insmod /lib/console/fbcon.ko
[ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1


# Set console powerdown 0
echo -ne "\033[14;0]" > /dev/console
# Set console blank 0
#echo -ne "\033[9;0]" > /dev/console

# Disable dmesg to console
#echo "1 1 1 7" > /proc/sys/kernel/printk

[ -d /data ] || mkdir /data
mount -t ext4 -o defaults,noatime,nodiratime,discard,errors=remount-ro,commit=60 /dev/mmcblk0p8 /data

mount --bind /data/media/linux /root
[ -d /root/media/0 ] || mkdir -p /root/media/0
mount --bind /data/media/0 /root/media/0
echo "load linux from mmcblk0p8!"

[ -d /etc ] || mkdir -m 0755 /etc
[ -d /run ] || mkdir -m 0755 /run

mkdir -p /var/lock

ln -sf /proc/mounts /etc/mtab

mount -t tmpfs -o "nosuid,size=20%,mode=0755" tmpfs /run
mkdir /run/initramfs
ln -s /run/initramfs /dev/.initramfs

export DPKG_ARCH=armhf

export ROOT=

if [ -f "/etc/hostname" ]; then
    /bin/hostname -b -F /etc/hostname 2>&1 1>/dev/null
fi

# Parse command line options
for x in $(cat /proc/cmdline); do
    case $x in
    init=*)
        init=${x#init=}
        ;;
    root=*)
        ROOT=${x#root=}
        case $ROOT in
        LABEL=*)
            ROOT="${ROOT#LABEL=}"

            # support any / in LABEL= path (escape to \x2f)
            case "${ROOT}" in
            */*)
            if command -v sed >/dev/null 2>&1; then
                ROOT="$(echo ${ROOT} | sed 's,/,\\x2f,g')"
            else
                if [ "${ROOT}" != "${ROOT#/}" ]; then
                    ROOT="\x2f${ROOT#/}"
                fi
                if [ "${ROOT}" != "${ROOT%/}" ]; then
                    ROOT="${ROOT%/}\x2f"
                fi
                IFS='/'
                newroot=
                for s in $ROOT; do
                    newroot="${newroot:+${newroot}\\x2f}${s}"
                done
                unset IFS
                ROOT="${newroot}"
            fi
            esac
            ROOT="/dev/disk/by-label/${ROOT}"
            ;;
        esac
        ;;
    esac
done

export BOOT

# Preserve information on old systems without /run on the rootfs
if [ -d /root/run ]; then
    mount -n -o move /run /root/run
else
    # The initramfs udev database must be migrated:
    if [ -d /run/udev ] && [ ! -d /dev/.udev ]; then
        mv /run/udev /dev/.udev
    fi
    # The initramfs debug info must be migrated:
    if [ -d /run/initramfs ] && [ ! -d /dev/.initramfs ]; then
        mv /run/initramfs /dev/.initramfs
    fi
    umount /run
fi


mount --bind /dev /root/dev

mount -n -o move /sys /root/sys
mount -n -o move /proc /root/proc

unset DPKG_ARCH
unset ROOT

echo ''
echo '====SYSTEM START===='
echo ''

# Chain to real filesystem
exec run-init /root /sbin/init "$@" </root/dev/console >/root/dev/console 2>&1
